name: Build and Upload Packages

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:  # Allow manual triggering

jobs:

  build:
    runs-on: ${{ matrix.arch == 'x86_64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        php-version: [8.2, 8.3, 8.4]
        arch: [x86_64, arm64]
        target: [native-native-gnu.2.17, native-native-gnu.2.28, native-native-gnu.2.34, native-native-gnu.2.39]
    steps:
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.GITHUBRPMHENDERKESPRIVATEKEY }}

      - name: Add remote host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H rpm.henderkes.com >> ~/.ssh/known_hosts

      - name: Get PHP version
        run: |
          # Get current PHP version using the PHP API
          php_version=$(curl -s "https://www.php.net/releases/index.php?json&version=${{ matrix.php-version }}" | jq -r '.version')
          echo "Current PHP version: ${php_version}"
          echo "PHP_VERSION=${php_version}" >> $GITHUB_ENV

      - name: Set architecture variables
        run: |
          if [[ "${{ matrix.arch }}" == "arm64" ]]; then
            echo "RPM_ARCH=aarch64" >> $GITHUB_ENV
          else
            echo "RPM_ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
          fi

      - name: Set target folder
        run: |
          if [[ "${{ matrix.target }}" == *"2.17"* ]]; then
            echo "TARGET_DIR=el7" >> $GITHUB_ENV
          elif [[ "${{ matrix.target }}" == *"2.28"* ]]; then
            echo "TARGET_DIR=el8" >> $GITHUB_ENV
          elif [[ "${{ matrix.target }}" == *"2.34"* ]]; then
            echo "TARGET_DIR=el9" >> $GITHUB_ENV
          elif [[ "${{ matrix.target }}" == *"2.39"* ]]; then
            echo "TARGET_DIR=el10" >> $GITHUB_ENV
          else
            echo "TARGET_DIR=el10" >> $GITHUB_ENV
          fi

      - name: Check if package already exists
        run: |
          ssh github@rpm.henderkes.com "test -f /home/github/rpm/${{ env.RPM_ARCH }}/${{ env.TARGET_DIR }}/php-zts-cli-${{ env.PHP_VERSION }}*.rpm" && exists="true" || exists="false"

          echo "${{ env.RPM_ARCH }} PHP ${{ matrix.php-version }} (${{ matrix.target }}) exists: ${exists}"

          if [ "$exists" = "true" ] && [ "${{ github.event_name }}" != "workflow_dispatch" ]; then
            echo "Package already exists. Skipping build."
            echo "PACKAGE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "PACKAGE_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Checkout code
        if: env.PACKAGE_EXISTS != 'true'
        uses: actions/checkout@v4

      - name: Set up PHP
        if: env.PACKAGE_EXISTS != 'true'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, xml, json, curl, zip
          tools: composer:v2

      - name: Install dependencies
        if: env.PACKAGE_EXISTS != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby rpm build-essential
          sudo gem install fpm
          composer install

      - name: Build PHP and packages
        if: env.PACKAGE_EXISTS != 'true'
        run: |
          php bin/spp all --target=${{ matrix.target }} --type=rpm --phpv=${{ matrix.php-version }}

      - name: Upload packages
        if: env.PACKAGE_EXISTS != 'true'
        run: |
          scp dist/rpm/*.rpm github@rpm.henderkes.com:/home/github/rpm/${{ env.RPM_ARCH }}/${{ env.TARGET_DIR }}/

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
