# PHP version to build (default: 8.4)
php-version: majorminor
# [REQUIRED] Static PHP extensions to build (list or comma-separated are both accepted)
extensions: apcu,ast,bcmath,calendar,ctype,curl,dba,dom,exif,fileinfo,filter,iconv,libxml,mbregex,mbstring,opcache,openssl,pcntl,phar,posix,readline,session,simplexml,sockets,sodium,tokenizer,xml,xmlreader,xmlwriter,zip,zlib
# [OPTIONAL] Shared PHP extensions to build (list or comma-separated are both accepted)
shared-extensions: [amqp,brotli,bz2,dio,ds,ev,event,ffi,ftp,gd,gettext,gmp,gmssl,igbinary,imagick,inotify,intl,ldap,memcache,mongodb,msgpack,mysqli,mysqlnd,odbc,opentelemetry,parallel,pdo,pdo_mysql,pdo_odbc,pdo_pgsql,pdo_sqlite,pdo_sqlsrv,pgsql,protobuf,rar,redis,rdkafka,shmop,spx,sqlite3,sqlsrv,ssh2,swoole,sysvmsg,sysvsem,sysvshm,tidy,uuid,uv,xdebug,xhprof,xlswriter,xsl,xz,yac,yaml,zstd]
# Extra libraries to build (list or comma-separated are both accepted)
libs: [libacl]
# [REQUIRED] Build SAPIs (list or comma-separated are both accepted)
sapi: cli,embed,fpm
# Show full console output (default: false)
debug: false
# Build options (same as `build` command options, all options are optional)
build-options:
    # Build with Zend Thread Safety (ZTS) enabled (default: false)
    enable-zts: true
    # Before build, remove all old build files and sources (default: false)
    with-clean: false
    # Build with all suggested libraries (default: false)
    with-suggested-libs: true
    # Build with all suggested extensions (default: false)
    with-suggested-exts: false
    # Build without stripping the binary (default: false)
    no-strip: false
    # Disable Opcache JIT (default: false)
    disable-opcache-jit: false
    # PHP configuration options (same as --with-config-file-path)
    with-config-file-path: "/etc/static-php"
    # PHP configuration options (same as --with-config-file-scan-dir)
    with-config-file-scan-dir: "/etc/static-php/php.d"
    # Hardcoded INI options for cli and micro SAPI (e.g. "memory_limit=4G", list accepted)
    with-hardcoded-ini: [ ]
    # Pretend micro SAPI as cli SAPI to avoid some frameworks to limit the usage of micro SAPI
    with-micro-fake-cli: false
    # Additional patch point injection files (e.g. "path/to/patch.php", list accepted)
    with-added-patch: [ ]
    # Ignore micro extension tests (if you are using micro SAPI, default: false)
    without-micro-ext-test: false
    # UPX pack the binary (default: false)
    with-upx-pack: false
    # Set the micro.exe program icon (only for Windows, default: "")
    with-micro-logo: ""
    # Set micro SAPI as win32 mode, without this, micro SAPI will be compiled as a console application (only for Windows, default: false)
    enable-micro-win32: false

# Download options
download-options:
    # Use custom url for specified sources, format: "{source-name}:{url}" (e.g. "php-src:https://example.com/php-8.4.0.tar.gz")
    custom-url: [ ]
    # Use custom git repo for specified sources, format: "{source-name}:{branch}:{url}" (e.g. "php-src:master:https://github.com/php/php-src.git")
    custom-git: [ ]
    # Retries count for downloading sources (default: 5)
    retry: 5
    # Use pre-built libraries if available (default: false)
    prefer-pre-built: false
    # Do not download from alternative sources (default: false)
    no-alt: false
    # Ignore cache sources, format: "{source-name}" (e.g. "php-src")
    ignore-cache-sources: ''

craft-options:
    doctor: true
    download: true
    build: true

# Extra environment variables
extra-env:
    # e.g. Use github token to avoid rate limit
    # GITHUB_TOKEN: your-github-token
    SPC_LIBC: glibc
    EXTENSION_DIR: /usr/lib/static-php/modules
    SPC_CMD_VAR_PHP_EMBED_TYPE: shared
    SPC_DEFAULT_C_FLAGS: "-fpic -O3 -fcf-protection -fstack-protector-strong -fstack-clash-protection -march=x86-64-v3"
    SPC_DEFAULT_CXX_FLAGS: "-fpic -O3 -fcf-protection -fstack-protector-strong -fstack-clash-protection -march=x86-64-v3"
    SPC_OPT_BUILD_ARGS: "--with-config-file-path=/etc/static-php --with-config-file-scan-dir=/etc/static-php/php.d"
    SPC_CMD_VAR_PHP_MAKE_EXTRA_CFLAGS: "-g0 -fstack-protector-strong -O3 -fno-ident -fpic -fpie"
    SPC_CMD_VAR_PHP_MAKE_EXTRA_LDFLAGS: "-pie -release zts-8"
    LDFLAGS: "-Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack"
    SPC_CMD_PREFIX_PHP_CONFIGURE: "./configure --prefix= --with-valgrind=no --disable-shared --enable-static --disable-all --disable-cgi --disable-phpdbg --disable-debug --with-pic --disable-dependency-tracking --enable-rtld-now"
    PHP_BUILD_PROVIDER: "Static PHP repository <https://rpm.static-php.dev> #StandWithUkraine"
    CONFIGURE_COMMAND: ""
